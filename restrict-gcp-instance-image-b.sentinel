# restrict-gcp-instance-image-b.sentinel
# This policy restricts the public images that GCP compute instances use

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan

# Standard types import
import "types"

# Get all GCP compute instances
allGCPComputeInstances = plan.find_resources("google_compute_instance")

# Function to restrict images used by GCP compute instances
filter_images = func(instances, image) {

  # Create empty list of violators
  violators = {}

  # Iterate over instances to check their images
  for instances as address, instance {
    # Set boot_disk variable
    boot_disk = <expression_1>
    # Validate that the initialize_params block is present and a list
    # and that the image under it is allowed
    # Add violators to the violators list and print warnings
    if types.type_of(<expression_2>) is not "list" {
      violators[address] = instance
      print(address, "does not have image defined: it should be", image)
    } else if <expression_3> is not image {
      violators[address] = instance
      print(address, "has image", <expression_3>,
            "but is supposed to use", image)
    } // end if
  } // end for

  return violators

}

# Filter to violating GCP instances
violatingGCPComputeInstances = filter_images(allGCPComputeInstances, "debian-cloud/debian-9")

# Count violations
violations = length(violatingGCPComputeInstances)

# Main rule
<add_main_rule>
