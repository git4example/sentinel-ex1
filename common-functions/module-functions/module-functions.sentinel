# Functions that use the tfconfig import to restrict modules

##### Imports #####
import "tfconfig/v2" as tfconfig
import "strings"

##### Functions #####


# Require all modules directly under root module to come from PMR
require_modules_from_pmr = func(tf_address, tf_org) {

  validated = true

  # Iterate over all modules but focus on calls from the root module.
  # A module call represents one module referencing another module
  # with a module block.
  for tfconfig.module_calls as index, mc {
    # Ignore modules with index matching "<address>:<name>"
    # since these are not called from the root module.
    if index not matches "(.+):(.+)"  {
      if not strings.has_prefix(mc.source, tf_address + "/" + tf_org) {
        print("Your root module called the module", index, "with source", mc.source)
        validated = false
      } // end second if
    } // end first if
  } // end for

  if not validated {
    print("All modules called from the root module must come from the",
          "private module registry", tf_address + "/" + tf_org)
  }

  return validated
}